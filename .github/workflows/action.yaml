on: [push, pull_request]
name: Test
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: [./valveapiclient, ./faceitapiclient, ./gamecoordinatorclient, ./shared]
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.45.2
          working-directory: ${{ matrix.dir }}

  test:
    strategy:
      matrix:
        go-version: [1.16.x, 1.17.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
        dir: [./valveapiclient, ./faceitapiclient, ./gamecoordinatorclient, ./shared]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Test
      working-directory: ${{ matrix.dir }}
      run: make test

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Version ${{ github.ref }}
          draft: true
          prerelease: false
