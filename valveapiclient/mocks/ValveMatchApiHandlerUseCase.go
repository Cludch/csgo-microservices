// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	valveapiclient "github.com/Cludch/csgo-microservices/valveapiclient/proto"
)

// ValveMatchApiHandlerUseCase is an autogenerated mock type for the ValveMatchApiHandlerUseCase type
type ValveMatchApiHandlerUseCase struct {
	mock.Mock
}

// GetNextShareCode provides a mock function with given fields: ctx, req
func (_m *ValveMatchApiHandlerUseCase) GetNextShareCode(ctx context.Context, req *valveapiclient.ShareCodeRequest) (*valveapiclient.ShareCode, error) {
	ret := _m.Called(ctx, req)

	var r0 *valveapiclient.ShareCode
	if rf, ok := ret.Get(0).(func(context.Context, *valveapiclient.ShareCodeRequest) *valveapiclient.ShareCode); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*valveapiclient.ShareCode)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *valveapiclient.ShareCodeRequest) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
